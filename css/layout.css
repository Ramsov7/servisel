/* layout.css â€” header, main, bottom-nav, grid, responsive */

header { background: var(--header-bg); color: var(--header-text); padding: 12px 18px; }
/* Hide header by default to avoid flashes on full reload; JS will add html.show-header when appropriate */
header { display: none; }
/* Avoid flashing header before JS initialises navigation; hide until .app-ready is added */
header { opacity: 0; transform: translateY(-6px); transition: opacity 180ms ease, transform 180ms ease; }
html.app-ready header { opacity: 1; transform: translateY(0); }
/* show header only when JS explicitly enables it */
/* Show header only when JS has signalled app-ready and requested header visibility */
html.app-ready.show-header header { display: block; }
header .top-bar { display: flex; justify-content: space-between; align-items: center; gap: 12px; }
header .user-profile { display: flex; align-items: center; gap: 10px; }
header .user-profile img { width: 36px; height: 36px; border-radius: 50%; }
header .user-profile span { font-size: 15px; font-weight: bold; display: inline-block; transform: translateY(3px); margin-bottom: 4px; }
header .notif-btn { background: none; border: none; color: var(--header-text); cursor: pointer; width: var(--control-h); height: var(--control-h); display: inline-flex; align-items: center; justify-content: center; padding: 0; border-radius: 8px; transform: translateY(3px); margin-bottom: 4px; }
header .notif-btn svg { width: 24px; height: 24px; color: var(--header-text); display: block; }

/* When icons are still external (<img>), ensure they render at expected size to avoid flash
   before JS inlines SVGs. Target common placements: header, bottom-nav, and fab. */
header .notif-btn img,
.bottom-nav button img,
.add-btn img,
.reset-wrap .reset-icon {
  width: 22px;
  height: 22px;
  display: block;
  object-fit: contain;
  color: currentColor;
}

.add-btn img { width: calc(var(--control-h) * 0.9); height: calc(var(--control-h) * 0.9); }

/* Hide external icon images until iconsLoader has finished inlining to prevent visual flicker.
   Inlined SVGs will be visible immediately; if icons cannot be inlined, images fade in once ready. */
img[src^="assets/icons/"] {
  opacity: 0;
  transition: opacity 160ms linear;
}

html.icons-ready img[src^="assets/icons/"] {
  opacity: 1;
}

#header-search { display: flex; gap: 10px; align-items: center; }
#header-search[aria-hidden="true"] { display: none; }
#header-search .search-input-wrap { min-width: 180px; }

.header-controls, #header-dropdowns.header-controls {
  display: flex; flex-direction: column; gap: var(--header-inner-gap);
  align-items: stretch; justify-content: flex-start; margin-top: var(--header-gap);
}
#header-dropdowns { width: 100%; }

main { max-width: 1100px; margin: auto; padding: 8px 12px 20px 12px; padding-bottom: 80px; }
section { display: none; }
section.active { display: block; }

/* Bottom nav */
.bottom-nav {
  /* tunable vars: --bn-lift controls how much the active item lifts */
  --bn-lift: 5px;
  --bn-lift-shadow: 0 10px 20px rgba(0,0,0,0.12);
  --bottom-nav-label-bottom: 2px; /* distance from bottom edge */
  --bottom-nav-label-hidden-translate: 10px; /* how far label sits below its final spot when hidden */

  position: fixed; bottom: 0; left: 0; right: 0;
  background: linear-gradient(180deg, rgba(0,0,0,0.04), transparent), var(--nav-bg);
  display: flex; justify-content: space-around; padding: 8px 8px;
  border-top: 1px solid rgba(0,0,0,0.06); backdrop-filter: blur(6px);
}

/* When FAB is open we want the rest of the bottom navigation to recede visually.
   Use a body-level class toggled by JS so this can be animated and easily reverted.
   - blur the nav slightly and reduce its opacity
   - disable pointer-events so only the FAB and its option buttons are interactive
   - keep FAB and notch above via z-index so they remain usable
*/
body.fab-open .bottom-nav {
  filter: blur(6px) saturate(0.85);
  opacity: 0.72;
  pointer-events: none; /* make nav inert while FAB menu is open */
  transition: filter 220ms ease, opacity 220ms ease;
}

/* Ensure the FAB and its actions remain interactive above the blurred nav */
.fab-container, .nav-notch, .fab-actions, .fab {
  z-index: 9999; /* sit above the bottom-nav blur */
  pointer-events: auto; /* keep interactions enabled for FAB controls */
}

.bottom-nav button {
  background: none; border: none; color: var(--muted); position: relative; display: flex; align-items: center; justify-content: center;
  font-size: 12px; cursor: pointer; flex: 1; padding: 8px 0; height: 56px;
  transition: transform var(--transition-fast) ease, box-shadow var(--transition-fast) ease, color var(--transition-fast) ease;
  /* Remove mobile blue tap highlight and optimize touch behavior */
  -webkit-tap-highlight-color: transparent;
  touch-action: manipulation;
  -ms-touch-action: manipulation;
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
}

.bottom-nav button.active {
  color: var(--primary);
  /* keep the button state but avoid applying a full rectangular box-shadow or background
     which created a visible 'box' around shifted buttons on some layouts. Instead,
     only apply the vertical lift transform; move the shadow to the svg/icon so the
     visual reads as the icon being raised rather than an entire button card. */
  transform: translateY(calc(-1 * var(--bn-lift)));
  /* remove box-shadow on the button itself to avoid rectangular artifacts */
  box-shadow: none;
  z-index: 6; /* keep lifted item above neighbors */
}

/* Nudge the second and third buttons (Unit and Item) away from the centered FAB so they don't crowd it */
.bottom-nav > button:nth-child(2) { /* Unit - nudge left using translate to avoid flex spacing side-effects */
  transform: translateX(-18px) !important;
}
.bottom-nav > button:nth-child(3) { /* Item - nudge right using translate to avoid flex spacing side-effects */
  transform: translateX(18px) !important;
}

/* Preserve the horizontal nudge when the button is active (combine X offset with Y lift) */
.bottom-nav > button:nth-child(2).active { transform: translateX(-18px) translateY(calc(-1 * var(--bn-lift))) !important; z-index: 7; /* box-shadow moved to icon */ }
.bottom-nav > button:nth-child(3).active { transform: translateX(18px) translateY(calc(-1 * var(--bn-lift))) !important; z-index: 7; /* box-shadow moved to icon */ }

@media (max-width: 520px) {
  .bottom-nav > button:nth-child(2) { transform: translateX(-22px) !important; }
  .bottom-nav > button:nth-child(3) { transform: translateX(22px) !important; }
  .bottom-nav > button:nth-child(2).active { transform: translateX(-22px) translateY(calc(-1 * var(--bn-lift))) !important; }
  .bottom-nav > button:nth-child(3).active { transform: translateX(22px) translateY(calc(-1 * var(--bn-lift))) !important; }
}

/* Restore the tactile press/lift visual for shifted bottom-nav buttons while keeping their X offset.
   These rules are high-specificity and use !important to override the global neutralize earlier in components.css.
   - nth-child(2) and nth-child(3) keep their horizontal translateX and add the vertical lift on :active
   - other bottom-nav buttons simply get the vertical lift when pressed
*/
.bottom-nav > button:nth-child(2):active {
  transform: translateX(-18px) translateY(calc(-1 * var(--bn-lift))) !important;
  /* remove rectangular box-shadow on pointer down */
  box-shadow: none !important;
  z-index: 7 !important;
}
.bottom-nav > button:nth-child(3):active {
  transform: translateX(18px) translateY(calc(-1 * var(--bn-lift))) !important;
  /* remove rectangular box-shadow on pointer down */
  box-shadow: none !important;
  z-index: 7 !important;
}
@media (max-width: 520px) {
  .bottom-nav > button:nth-child(2):active {
    transform: translateX(-22px) translateY(calc(-1 * var(--bn-lift))) !important;
    /* don't apply a full-button shadow on small screens; keep shadow on the icon only */
    box-shadow: none !important;
    z-index: 7 !important;
  }
  .bottom-nav > button:nth-child(3):active {
    transform: translateX(22px) translateY(calc(-1 * var(--bn-lift))) !important;
    /* don't apply a full-button shadow on small screens; keep shadow on the icon only */
    box-shadow: none !important;
    z-index: 7 !important;
  }
}

/* Generic active press for other bottom-nav buttons (center, first, etc.) */
.bottom-nav > button:active {
  transform: translateY(calc(-1 * var(--bn-lift))) !important;
  /* avoid adding a full-button shadow on pointer press which creates a rectangular artifact */
  box-shadow: none !important;
  z-index: 6 !important;
}

/* Remove visible rectangular focus/active outlines that appear on click for mouse users */
.bottom-nav button,
.bottom-nav button:active,
.bottom-nav button.active {
  outline: none !important;
  box-shadow: none; /* prevent default focus box from some UA styles */
}

/* Keep an accessible focus indicator for keyboard users only */
.bottom-nav button:focus-visible {
  outline: none;
  box-shadow: 0 4px 14px rgba(59,130,246,0.12), 0 0 0 4px rgba(59,130,246,0.08);
  transform: translateY(calc(-1 * var(--bn-lift))) scale(1.01);
}

.bottom-nav svg {
  width: 22px; height: 22px; position: absolute; left: 50%; top: 50%;
  transform: translate(-50%, -50%);
  transition: transform var(--transition-fast) ease, opacity 160ms ease;
  fill: currentColor; stroke: currentColor;
}

/* slightly nudge the icon upwards when its button is active so it reads as lifted */
.bottom-nav button.active svg {
  transform: translate(-50%, -60%) scale(1.03);
  /* apply shadow to the icon itself rather than the full button to avoid
     a rectangular 'card' background behind Unit/Item buttons */
  filter: drop-shadow(0 10px 18px rgba(2,6,23,0.06));
}

/* When user presses/touches a bottom-nav button, keep the rectangular box removed
   and apply the shadow to the icon only so no full-button box appears on click/hold. */
.bottom-nav button:active svg,
.bottom-nav button:focus:not(:focus-visible) svg {
  filter: drop-shadow(0 10px 20px rgba(2,6,23,0.08));
  transform: translate(-50%, -60%) scale(1.03);
}

.bottom-nav span {
  display: none !important;
  position: absolute;
  left: 50%;
  bottom: var(--bottom-nav-label-bottom);
  transform: translateX(-50%) translateY(var(--bottom-nav-label-hidden-translate));
  font-size: 11px;
  opacity: 0;
  transition: opacity 180ms ease, transform 180ms ease;
  color: currentColor;
}

.bottom-nav button.active span { display: inline-block !important; opacity: 1; transform: translateX(-50%) translateY(0); }

@media (max-width: 520px) {
  header { padding: 6px 10px; }
  #header-search { gap: 6px; }
}

/* On small screens, emphasize icon drop-shadow when button is active/pressed so
   the lifted look remains without any full-button box-shadow that creates a rectangular artifact. */
@media (max-width: 520px) {
  .bottom-nav button.active svg,
  .bottom-nav button:active svg,
  .bottom-nav button:focus:not(:focus-visible) svg {
    filter: drop-shadow(0 12px 22px rgba(2,6,23,0.12));
    transform: translate(-50%, -60%) scale(1.05);
  }
}

/* Loading overlay styles */
#loading-overlay {
  position: fixed; inset: 0; z-index: 9999;
  display: flex; align-items: center; justify-content: center;
  background: var(--bg-2, rgba(255,255,255,0.96));
  color: var(--text);
  transition: opacity 220ms ease, visibility 220ms ease;
}
#loading-overlay[aria-hidden="true"] { opacity: 0; visibility: hidden; pointer-events: none; }
#loading-overlay .loading-inner { text-align: center; display:flex; flex-direction:column; gap:12px; align-items:center; }
#loading-overlay .loading-logo { width: 140px; height: auto; display:block; }
/* 5-dot pulsing loader */
#loading-overlay .loading-spinner {
  display: flex; gap: 8px; align-items: center; justify-content: center;
}
#loading-overlay .loading-spinner .dot {
  width: 8px; height: 8px; border-radius: 50%; background: var(--primary); opacity: 0.15; transform: scale(0.9);
  animation: dotPulse 1s infinite linear;
}
#loading-overlay .loading-spinner .dot:nth-child(1) { animation-delay: 0s; }
#loading-overlay .loading-spinner .dot:nth-child(2) { animation-delay: 0.12s; }
#loading-overlay .loading-spinner .dot:nth-child(3) { animation-delay: 0.24s; }
#loading-overlay .loading-spinner .dot:nth-child(4) { animation-delay: 0.36s; }
#loading-overlay .loading-spinner .dot:nth-child(5) { animation-delay: 0.48s; }

@keyframes dotPulse {
  0% { opacity: 0.15; transform: scale(0.9); }
  50% { opacity: 1; transform: scale(1.2); }
  100% { opacity: 0.15; transform: scale(0.9); }
}

/* Hide overlay once app signals ready by setting aria-hidden */
html.app-ready #loading-overlay[aria-hidden="false"] { opacity: 1; visibility: visible; }

/* Defensive mobile/touch overrides: prevent UA tap highlight, pseudo-elements or
   background/shadow overlays appearing on press in some mobile WebViews/browsers. */
.bottom-nav button,
.bottom-nav button:active,
.bottom-nav button:focus,
.bottom-nav button:focus-visible,
.bottom-nav button:focus:not(:focus-visible) {
  -webkit-tap-highlight-color: transparent !important;
  -webkit-touch-callout: none !important;
  -webkit-user-select: none !important;
  user-select: none !important;
  background: transparent !important;
  box-shadow: none !important;
  outline: none !important;
}

.bottom-nav button::before,
.bottom-nav button::after {
  display: none !important;
  content: none !important;
}

/* Global suppression of mobile tap highlight and touch callouts for stubborn WebViews/browsers.
   This uses !important to override UA defaults; keyboard users still receive :focus-visible outlines.
*/
html, html * {
  -webkit-tap-highlight-color: transparent !important;
  -webkit-touch-callout: none !important;
}

button, a, input, textarea, select, label, .item-card, .item-card *, .jasa-item, .jasa-item *, .fab, .fab * {
  -webkit-tap-highlight-color: transparent !important;
  touch-action: manipulation !important;
  -ms-touch-action: manipulation !important;
  -webkit-user-select: none !important;
  user-select: none !important;
  -webkit-touch-callout: none !important;
}

/* Keep keyboard-visible focus rings for accessibility */
:focus-visible {
  outline: 3px solid rgba(37,99,235,0.12) !important;
  outline-offset: 2px !important;
}
